{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hackathon Documentation Simple to follow examples of how to use FHIR, DICOMweb and other modern healthcare/medical imaging APIs Getting started (start here if you are new) Read about the SIIM Hackathon Server Participating in the SIIM Hackathon? Read about how to pariticipate in in the SIIM hackathon","title":"Home"},{"location":"#hackathon-documentation","text":"Simple to follow examples of how to use FHIR, DICOMweb and other modern healthcare/medical imaging APIs","title":"Hackathon Documentation"},{"location":"#getting-started-start-here-if-you-are-new","text":"Read about the SIIM Hackathon Server","title":"Getting started (start here if you are new)"},{"location":"#participating-in-the-siim-hackathon","text":"Read about how to pariticipate in in the SIIM hackathon","title":"Participating in the SIIM Hackathon?"},{"location":"apis/dicom-web-intro/","text":"5-Minute DICOMweb Starting Guide DICOMweb Concepts To get started with DICOMweb, there are a few key concepts to understand. * An imaging structure consists of a Patient (typically corresponds to a single \"person\"), a Study (typically corresponds to a single \"diagnostic order\"), a Series (typically corresponds to a single \"imaging event\" within a study, for example, multiple views, or with/without contrast), and an Instance (typically corresponds to a single image). * First, you must QUERY for studies and their underlying structure, using the QIDO-RS feature of DICOMweb. * Then, you can RETRIEVE individual instances for rendering, using the WADO-RS feature of DICOMweb. * If desired, you can STORE individual instances, using the STOW-RS feature of DICOMweb. Don't forget... When making requests against the end points below, ensure you include an HTTP header like so: apikey: [your API key] 1. A Hello World example A simple Hello World type query for DICOMweb, would look as follows, to query for all studies for all patients with the last name of SIIM : https://hackathon.siim.org/dicomweb/studies/?00100010=SIIM* NOTE: If you having trouble formulating a QIDO request, an alternative way to discover patients/studies is to use Orthanc's web UI at: https://hackathon.siim.org/vna/ 2. Get study information Once you've picked a study to download, extract the study UID from the response and you can download its study structure by making a subsequent QIDO-RS query: https://hackathon.siim.org/dicomweb/studies/1.3.6.1.4.1.14519.5.2.1.4792.2001.103189108764313019491934667255/instances 3. Switch return format between XML and JSON If you want to control the format of the server response, add an Accept header with application/json for JSON or text/xml for XML. NOTE: When you choose XML, DICOMweb retuns results in multipart format, which is used to combine multilple objets into one response. Read more about multipart at https://pspdfkit.com/blog/2021/a-brief-tour-of-multipart-requests/ and https://swagger.io/docs/specification/describing-request-body/multipart-requests/. 4. Download DICOM Images And once you've done that, select an image to download from the response, extract the series UID and instance UID from the response and you can download the DICOM image by making a subsequent WADO-RS query: https://hackathon.siim.org/dicomweb/studies/1.3.6.1.4.1.14519.5.2.1.4792.2001.103189108764313019491934667255/series/1.3.6.1.4.1.14519.5.2.1.4792.2001.104616474240757574154876423123/instances/1.3.6.1.4.1.14519.5.2.1.4792.2001.267212981954448819074140522716 Ensure your request includes a header that specifies the return type, i.e. Accept: application/dicom 5. View Images in JPEG/PNG Add /frames/1/rendered to the URL from the last step, and change your Accept header to either image/jpeg or image/png . Here's the full URL: http://hackathon.siim.org/dicomweb/studies/1.3.6.1.4.1.14519.5.2.1.7777.9002.198875685720513246512710453733/series/1.3.6.1.4.1.14519.5.2.1.7777.9002.207203214132667549392101803048/instances/1.3.6.1.4.1.14519.5.2.1.7777.9002.327873213718058651550666129029/frames/1/rendered 6. Using WADO-URL instead of WADO-RS If you are working with a server that does not support DICOMweb, you can retrieve images (as DICOM, or rendered JPEG/PNG) using the older WADO-URL standard. For example: https://hackathon.siim.org/wadouri/?requestType=WADO&studyUID=1.3.6.1.4.1.14519.5.2.1.4792.2001.103189108764313019491934667255&seriesUID=1.3.6.1.4.1.14519.5.2.1.4792.2001.104616474240757574154876423123&objectUID=1.3.6.1.4.1.14519.5.2.1.4792.2001.267212981954448819074140522716 The URL above returns DICOM. If you want a rendered JPEG or PND, simply add &contentType=image/jpeg or &contentType=image/png to your URL (not header) request. Beyond simple viewing Interested in pushing data to the server? This article provides tips on how to do that using cURL, which can easily be adapted for use with other tools, like Postman. Resources DICOMweb documentation: http://www.dicomweb.org/ QIDO-RS: ftp://medical.nema.org/medical/dicom/final/sup166_ft5.pdf WADO-RS: ftp://medical.nema.org/medical/dicom/final/sup161_ft.pdf STOW-RS: ftp://medical.nema.org/medical/dicom/Final/sup163_ft3.pdf","title":"DICOMweb Intro"},{"location":"apis/dicom-web-intro/#5-minute-dicomweb-starting-guide","text":"","title":"5-Minute DICOMweb Starting Guide"},{"location":"apis/dicom-web-intro/#dicomweb-concepts","text":"To get started with DICOMweb, there are a few key concepts to understand. * An imaging structure consists of a Patient (typically corresponds to a single \"person\"), a Study (typically corresponds to a single \"diagnostic order\"), a Series (typically corresponds to a single \"imaging event\" within a study, for example, multiple views, or with/without contrast), and an Instance (typically corresponds to a single image). * First, you must QUERY for studies and their underlying structure, using the QIDO-RS feature of DICOMweb. * Then, you can RETRIEVE individual instances for rendering, using the WADO-RS feature of DICOMweb. * If desired, you can STORE individual instances, using the STOW-RS feature of DICOMweb.","title":"DICOMweb Concepts"},{"location":"apis/dicom-web-intro/#dont-forget","text":"When making requests against the end points below, ensure you include an HTTP header like so: apikey: [your API key]","title":"Don't forget..."},{"location":"apis/dicom-web-intro/#1-a-hello-world-example","text":"A simple Hello World type query for DICOMweb, would look as follows, to query for all studies for all patients with the last name of SIIM : https://hackathon.siim.org/dicomweb/studies/?00100010=SIIM* NOTE: If you having trouble formulating a QIDO request, an alternative way to discover patients/studies is to use Orthanc's web UI at: https://hackathon.siim.org/vna/","title":"1. A Hello World example"},{"location":"apis/dicom-web-intro/#2-get-study-information","text":"Once you've picked a study to download, extract the study UID from the response and you can download its study structure by making a subsequent QIDO-RS query: https://hackathon.siim.org/dicomweb/studies/1.3.6.1.4.1.14519.5.2.1.4792.2001.103189108764313019491934667255/instances","title":"2. Get study information"},{"location":"apis/dicom-web-intro/#3-switch-return-format-between-xml-and-json","text":"If you want to control the format of the server response, add an Accept header with application/json for JSON or text/xml for XML. NOTE: When you choose XML, DICOMweb retuns results in multipart format, which is used to combine multilple objets into one response. Read more about multipart at https://pspdfkit.com/blog/2021/a-brief-tour-of-multipart-requests/ and https://swagger.io/docs/specification/describing-request-body/multipart-requests/.","title":"3. Switch return format between XML and JSON"},{"location":"apis/dicom-web-intro/#4-download-dicom-images","text":"And once you've done that, select an image to download from the response, extract the series UID and instance UID from the response and you can download the DICOM image by making a subsequent WADO-RS query: https://hackathon.siim.org/dicomweb/studies/1.3.6.1.4.1.14519.5.2.1.4792.2001.103189108764313019491934667255/series/1.3.6.1.4.1.14519.5.2.1.4792.2001.104616474240757574154876423123/instances/1.3.6.1.4.1.14519.5.2.1.4792.2001.267212981954448819074140522716 Ensure your request includes a header that specifies the return type, i.e. Accept: application/dicom","title":"4. Download DICOM Images"},{"location":"apis/dicom-web-intro/#5-view-images-in-jpegpng","text":"Add /frames/1/rendered to the URL from the last step, and change your Accept header to either image/jpeg or image/png . Here's the full URL: http://hackathon.siim.org/dicomweb/studies/1.3.6.1.4.1.14519.5.2.1.7777.9002.198875685720513246512710453733/series/1.3.6.1.4.1.14519.5.2.1.7777.9002.207203214132667549392101803048/instances/1.3.6.1.4.1.14519.5.2.1.7777.9002.327873213718058651550666129029/frames/1/rendered","title":"5. View Images in JPEG/PNG"},{"location":"apis/dicom-web-intro/#6-using-wado-url-instead-of-wado-rs","text":"If you are working with a server that does not support DICOMweb, you can retrieve images (as DICOM, or rendered JPEG/PNG) using the older WADO-URL standard. For example: https://hackathon.siim.org/wadouri/?requestType=WADO&studyUID=1.3.6.1.4.1.14519.5.2.1.4792.2001.103189108764313019491934667255&seriesUID=1.3.6.1.4.1.14519.5.2.1.4792.2001.104616474240757574154876423123&objectUID=1.3.6.1.4.1.14519.5.2.1.4792.2001.267212981954448819074140522716 The URL above returns DICOM. If you want a rendered JPEG or PND, simply add &contentType=image/jpeg or &contentType=image/png to your URL (not header) request.","title":"6. Using WADO-URL instead of WADO-RS"},{"location":"apis/dicom-web-intro/#beyond-simple-viewing","text":"Interested in pushing data to the server? This article provides tips on how to do that using cURL, which can easily be adapted for use with other tools, like Postman.","title":"Beyond simple viewing"},{"location":"apis/dicom-web-intro/#resources","text":"DICOMweb documentation: http://www.dicomweb.org/ QIDO-RS: ftp://medical.nema.org/medical/dicom/final/sup166_ft5.pdf WADO-RS: ftp://medical.nema.org/medical/dicom/final/sup161_ft.pdf STOW-RS: ftp://medical.nema.org/medical/dicom/Final/sup163_ft3.pdf","title":"Resources"},{"location":"apis/dicom-web-stow/","text":"Push DICOM to STOW Pushing DICOM files at a web archive takes a little more effort, but is still made easy by simple off-the-shelf tools. cURL is one of these. It is a command line tool built for almost every platform that knows how to talk \"web\". For example, to upload a single part 10 DICOM file to one of the STOW enabled hackathon archives, just use cURL like this: curl -X POST -H \"APIKey: [MyApiKey]\" -H \"Content-Type: multipart/related; type=application/dicom\" -F \"file=@[dicom.dcm];type=application/dicom\" \"http://hackathon.siim.org/dicomweb/studies\" -v Replace the parts in red with the appropriate value, i.e.: * [MyApiKey] - your SIIM Hackathon API Key for the API Gateway (the one you got after signing the participation agreement) * [dicom.dcm] with the DICOM file name you want to send. You can also send multiple DICOM files at once by repeating that underlined segment.","title":"DICOMweb STOW"},{"location":"apis/dicom-web-stow/#push-dicom-to-stow","text":"Pushing DICOM files at a web archive takes a little more effort, but is still made easy by simple off-the-shelf tools. cURL is one of these. It is a command line tool built for almost every platform that knows how to talk \"web\". For example, to upload a single part 10 DICOM file to one of the STOW enabled hackathon archives, just use cURL like this: curl -X POST -H \"APIKey: [MyApiKey]\" -H \"Content-Type: multipart/related; type=application/dicom\" -F \"file=@[dicom.dcm];type=application/dicom\" \"http://hackathon.siim.org/dicomweb/studies\" -v Replace the parts in red with the appropriate value, i.e.: * [MyApiKey] - your SIIM Hackathon API Key for the API Gateway (the one you got after signing the participation agreement) * [dicom.dcm] with the DICOM file name you want to send. You can also send multiple DICOM files at once by repeating that underlined segment.","title":"Push DICOM to STOW"},{"location":"apis/fhir-intro/","text":"5-Minute FHIR Starting Guide FHIR Concepts All FHIR calls are based on retrieving resources. There are many different types of resources for data you would like to retrieve, including patient information, orders, reports, results, and more. Don't forget... When making requests against the end points below, ensure you include an HTTP header like so: apikey: [your API key] 1. A Hello World example A simple Hello World type query for FHIR, would look as follows, to query for all patients with the last name of SIIM : http://hackathon.siim.org/fhir/Patient?name=SIIM 2. Finding \"Imaging Studies\" of a given patient Once you've picked a patient to download, extract the patient ID by using the ID field from the response and you can download available studies by making a subsequent ImagingStudy query: http://hackathon.siim.org/fhir/ImagingStudy?patient=siimandy 3. Switch return format between XML and JSON If you want to control the format of the server response, add an Accept header with application/json for JSON or text/xml for XML. Resources Unofficial FHIR Starter Guide: http://www.learnfhir.com FHIR Home Page: https://www.hl7.org/fhir/index.html Searching using FHIR: https://www.hl7.org/fhir/search.html Patient Resource: https://www.hl7.org/fhir/patient.html","title":"FHIR Intro"},{"location":"apis/fhir-intro/#5-minute-fhir-starting-guide","text":"","title":"5-Minute FHIR Starting Guide"},{"location":"apis/fhir-intro/#fhir-concepts","text":"All FHIR calls are based on retrieving resources. There are many different types of resources for data you would like to retrieve, including patient information, orders, reports, results, and more.","title":"FHIR Concepts"},{"location":"apis/fhir-intro/#dont-forget","text":"When making requests against the end points below, ensure you include an HTTP header like so: apikey: [your API key]","title":"Don't forget..."},{"location":"apis/fhir-intro/#1-a-hello-world-example","text":"A simple Hello World type query for FHIR, would look as follows, to query for all patients with the last name of SIIM : http://hackathon.siim.org/fhir/Patient?name=SIIM","title":"1. A Hello World example"},{"location":"apis/fhir-intro/#2-finding-imaging-studies-of-a-given-patient","text":"Once you've picked a patient to download, extract the patient ID by using the ID field from the response and you can download available studies by making a subsequent ImagingStudy query: http://hackathon.siim.org/fhir/ImagingStudy?patient=siimandy","title":"2. Finding \"Imaging Studies\" of a given patient"},{"location":"apis/fhir-intro/#3-switch-return-format-between-xml-and-json","text":"If you want to control the format of the server response, add an Accept header with application/json for JSON or text/xml for XML.","title":"3. Switch return format between XML and JSON"},{"location":"apis/fhir-intro/#resources","text":"Unofficial FHIR Starter Guide: http://www.learnfhir.com FHIR Home Page: https://www.hl7.org/fhir/index.html Searching using FHIR: https://www.hl7.org/fhir/search.html Patient Resource: https://www.hl7.org/fhir/patient.html","title":"Resources"},{"location":"apis/other-apis-and-standards/","text":"Other noteworthy APIs, Standards and Utilities Note If you are participaing in the SIIM Hackathon, you could get bonus points if your project incorporates emerging standards such as there below! IHE AI Results (AIR) AI Workflow for Imaging (AIW-I) - Hint: Use the AI Orchestrator . FHIRcast - Check out their reference implementation plus the NodeJS port . Scan your code using SonarQube and include summaries of your findings (and things you learnt) in your showcase presentation (high-level overview, no need for detailed information or code samples). Even more bonus points if you are able to open-source your project code :) Can't get enough of this API goodness? Here are some additional APIs and utilities that could help you create the ultimate mashup: Open Health Imaging Foundation (OHIF) The Open Health Imaging Foundation is developing an open source framework for constructing web-based medical imaging applications. The application framework is built using modern HTML/CSS/JavaScript and uses Cornerstone at its core to display and manipulate medical images. It is built with Meteor, a Node.js-based full-stack JavaScript platform. PS: Check out their awesome web-based DICOM viewer. Static WADO-RS Generator Allows you to simulate a DICOMweb server using static content, i.e. you would only need a simple HTTP server instead of a PACS system. There are two versions: Java and Javascript Synthea Synthetic Patient Generation Synthea is an open-source, synthetic patient generator that models the medical history of synthetic patients. Our mission is to provide high-quality, synthetic, realistic but not real, patient data and associated health records covering every aspect of healthcare. The resulting data is free from cost, privacy, and security restrictions, enabling research with Health IT data that is otherwise legally or practically unavailable. Vonk Loader Vonk Loader is a command line tool to bulk load resources into a FHIR server. Vonk Loader works on Windows, Linux and macOS. FHIR Resource Editor (FRED) Allows construction of FHIR object using a convenient user interface. LOINC FHIR Terminology Server You can LOINC content programmatically. Their server uses the terminology services defined by HL7's FHIR standard. Radiology Gamuts Ontology API The Gamuts.net site provides a REST API to aid developers in using Radiology Gamuts Ontology information. RadReport API The Radreport.org site provides an API to aid developers in accessing structured report templates. The API provides a REST interface, which responds with JSON. RSNA RadLex Playbook RadLex Playbook is a project of the Radiological Society of North America (RSNA), and constitutes a portion of the RadLex ontology . Playbook aims to provide a standard system for naming radiology procedures, based on the elements which define an imaging exam such as modality and body part. By providing standard names and codes for radiologic studies, Playbook is intended to facilitate a variety of operational and quality improvement efforts, including workflow optimization, chargemaster management, radiation dose tracking, enterprise integration and image exchange. The RadLEx Playbook User Guide can be found here in PDF format: http://playbook.radlex.org/playbook-user-guide.pdf?newfile=1","title":"Other APIs/Standards"},{"location":"apis/other-apis-and-standards/#other-noteworthy-apis-standards-and-utilities","text":"Note If you are participaing in the SIIM Hackathon, you could get bonus points if your project incorporates emerging standards such as there below! IHE AI Results (AIR) AI Workflow for Imaging (AIW-I) - Hint: Use the AI Orchestrator . FHIRcast - Check out their reference implementation plus the NodeJS port . Scan your code using SonarQube and include summaries of your findings (and things you learnt) in your showcase presentation (high-level overview, no need for detailed information or code samples). Even more bonus points if you are able to open-source your project code :)","title":"Other noteworthy APIs, Standards and Utilities"},{"location":"apis/other-apis-and-standards/#cant-get-enough-of-this-api-goodness","text":"Here are some additional APIs and utilities that could help you create the ultimate mashup:","title":"Can't get enough of this API goodness?"},{"location":"apis/other-apis-and-standards/#open-health-imaging-foundation-ohif","text":"The Open Health Imaging Foundation is developing an open source framework for constructing web-based medical imaging applications. The application framework is built using modern HTML/CSS/JavaScript and uses Cornerstone at its core to display and manipulate medical images. It is built with Meteor, a Node.js-based full-stack JavaScript platform. PS: Check out their awesome web-based DICOM viewer.","title":"Open Health Imaging Foundation (OHIF)"},{"location":"apis/other-apis-and-standards/#static-wado-rs-generator","text":"Allows you to simulate a DICOMweb server using static content, i.e. you would only need a simple HTTP server instead of a PACS system. There are two versions: Java and Javascript","title":"Static WADO-RS Generator"},{"location":"apis/other-apis-and-standards/#synthea-synthetic-patient-generation","text":"Synthea is an open-source, synthetic patient generator that models the medical history of synthetic patients. Our mission is to provide high-quality, synthetic, realistic but not real, patient data and associated health records covering every aspect of healthcare. The resulting data is free from cost, privacy, and security restrictions, enabling research with Health IT data that is otherwise legally or practically unavailable.","title":"Synthea Synthetic Patient Generation"},{"location":"apis/other-apis-and-standards/#vonk-loader","text":"Vonk Loader is a command line tool to bulk load resources into a FHIR server. Vonk Loader works on Windows, Linux and macOS.","title":"Vonk Loader"},{"location":"apis/other-apis-and-standards/#fhir-resource-editor-fred","text":"Allows construction of FHIR object using a convenient user interface.","title":"FHIR Resource Editor (FRED)"},{"location":"apis/other-apis-and-standards/#loinc-fhir-terminology-server","text":"You can LOINC content programmatically. Their server uses the terminology services defined by HL7's FHIR standard.","title":"LOINC FHIR Terminology Server"},{"location":"apis/other-apis-and-standards/#radiology-gamuts-ontology-api","text":"The Gamuts.net site provides a REST API to aid developers in using Radiology Gamuts Ontology information.","title":"Radiology Gamuts Ontology API"},{"location":"apis/other-apis-and-standards/#radreport-api","text":"The Radreport.org site provides an API to aid developers in accessing structured report templates. The API provides a REST interface, which responds with JSON.","title":"RadReport API"},{"location":"apis/other-apis-and-standards/#rsna-radlex-playbook","text":"RadLex Playbook is a project of the Radiological Society of North America (RSNA), and constitutes a portion of the RadLex ontology . Playbook aims to provide a standard system for naming radiology procedures, based on the elements which define an imaging exam such as modality and body part. By providing standard names and codes for radiologic studies, Playbook is intended to facilitate a variety of operational and quality improvement efforts, including workflow optimization, chargemaster management, radiation dose tracking, enterprise integration and image exchange. The RadLEx Playbook User Guide can be found here in PDF format: http://playbook.radlex.org/playbook-user-guide.pdf?newfile=1","title":"RSNA RadLex Playbook"},{"location":"getting-started/hackathon-event/","text":"2022 SIIM Hackathon Join the SIIM Hackathon, taking place virtually May 31-June 3, 2022. Everyone is welcome - No coding experience required! The SIIM Hackathon is open to all walks of life, whether you are clinical, technical or something else - we want YOU! In true SIIM spirit, the hackathon is focused on education and collaboration above all else. Come in groups or individually - we can pair you with others. The hackathon is not a full-time engagement, meaning, you can join us with any amount of free time you have. The SIIM Hackathon features imaging informatics APIs like DICOMweb and FHIR among others, along with an open-source dataset showing how clinical and imaging data integrate. This year's additions including a private Blockchain network for tinkering, as well as Enterprise Imaging (i.e. non-Radiology) DICOM image samples. How can I participate? Go to https://siim.org/page/hacking_healthcare and ensure you are regitered for the hackathon sessions like the kickoff and brainstorming sessions at a bare minimum. At those sessions, we'll help you find you way. Don't forget to join the conversation on Slack . For inspiration of ideas to implement, check this list of hackathon project ideas . You can also take time to familiarize yourself with the Hackathon Server and its APIs. As well as resources of interest . Questions? Problems? Seek help by posting a message on Slack in #general . During the hackathon event, We have code heroes to help with technical matters in #code-heroes , and domain experts to help with clinical workflows and domain knowledge in #domain-experts . If you need help outside the hackathon event or for any other urgent matters please contact Mohannad Hussain or via @Mohannad if you are on the Hackathon Slack space. Some things to keep in mind! SIIM's hackathon dataset provides five cohesive patient stories that connect the FHIR and DICOMweb resources like a real-life patient would have. Search for patients with last name SIIM. Our FHIR server features version R4 of the standard (latest). Our DICOMweb server may not support every feature described in the DICOMweb specifications. Check here for more details.","title":"Hackathon Event"},{"location":"getting-started/hackathon-event/#2022-siim-hackathon","text":"Join the SIIM Hackathon, taking place virtually May 31-June 3, 2022. Everyone is welcome - No coding experience required! The SIIM Hackathon is open to all walks of life, whether you are clinical, technical or something else - we want YOU! In true SIIM spirit, the hackathon is focused on education and collaboration above all else. Come in groups or individually - we can pair you with others. The hackathon is not a full-time engagement, meaning, you can join us with any amount of free time you have. The SIIM Hackathon features imaging informatics APIs like DICOMweb and FHIR among others, along with an open-source dataset showing how clinical and imaging data integrate. This year's additions including a private Blockchain network for tinkering, as well as Enterprise Imaging (i.e. non-Radiology) DICOM image samples.","title":"2022 SIIM Hackathon"},{"location":"getting-started/hackathon-event/#how-can-i-participate","text":"Go to https://siim.org/page/hacking_healthcare and ensure you are regitered for the hackathon sessions like the kickoff and brainstorming sessions at a bare minimum. At those sessions, we'll help you find you way. Don't forget to join the conversation on Slack . For inspiration of ideas to implement, check this list of hackathon project ideas . You can also take time to familiarize yourself with the Hackathon Server and its APIs. As well as resources of interest .","title":"How can I participate?"},{"location":"getting-started/hackathon-event/#questions-problems","text":"Seek help by posting a message on Slack in #general . During the hackathon event, We have code heroes to help with technical matters in #code-heroes , and domain experts to help with clinical workflows and domain knowledge in #domain-experts . If you need help outside the hackathon event or for any other urgent matters please contact Mohannad Hussain or via @Mohannad if you are on the Hackathon Slack space.","title":"Questions? Problems?"},{"location":"getting-started/hackathon-event/#some-things-to-keep-in-mind","text":"SIIM's hackathon dataset provides five cohesive patient stories that connect the FHIR and DICOMweb resources like a real-life patient would have. Search for patients with last name SIIM. Our FHIR server features version R4 of the standard (latest). Our DICOMweb server may not support every feature described in the DICOMweb specifications. Check here for more details.","title":"Some things to keep in mind!"},{"location":"getting-started/hackathon-server/","text":"Before we start... If you have not signed the participant agreement yet, that would be the first thing you should do - Hackathon Agreement . Once you have the signed the agreement, an email will be sent to you with your API key. Secondly, don't forget to join the conversation on Slack . Keep an eye on the different hackathon events as listed on the website to get the most out of it. New to REST APIs? Check out this Primer on REST APIs . Wondering what's all this hype about the new standards - check our 60-second starting guide for FHIR as well as starting guide for DICOMweb . You won't believe how easy and quick it is to get started! Using the SIIM Hackathon Server When making requests against the end points below, ensure you include an HTTP header like so: apikey: [your API key] FHIR: Endpoint: https://hackathon.siim.org/fhir/ Overview of FHIR objects/resources at: https://hackathon.siim.org/ Server powered by HAPI FHIR DICOMweb: Endpoint: https://hackathon.siim.org/dicomweb/ WADO-URI endpoint: https://hackathon.siim.org/wadouri/ VNA Web UI at https://hackathon.siim.org/vna/ Server powered by Orthanc DICOM Server IHE SOLE: Endpoint: https://hackathon.siim.org/sole/ Check out the Profile text and Github project for information on how to use the API and event submission samples. See also Resources of Interest - other APIs, Libraries, etc. Datasets - Openly available datasets in medical imaging. Tip : If your prefer testing right from within your browser, you can use an extension like ModHeader to send your API key via HTTP headers.","title":"Hackathon Server"},{"location":"getting-started/hackathon-server/#before-we-start","text":"If you have not signed the participant agreement yet, that would be the first thing you should do - Hackathon Agreement . Once you have the signed the agreement, an email will be sent to you with your API key. Secondly, don't forget to join the conversation on Slack . Keep an eye on the different hackathon events as listed on the website to get the most out of it.","title":"Before we start..."},{"location":"getting-started/hackathon-server/#new-to-rest-apis","text":"Check out this Primer on REST APIs . Wondering what's all this hype about the new standards - check our 60-second starting guide for FHIR as well as starting guide for DICOMweb . You won't believe how easy and quick it is to get started!","title":"New to REST APIs?"},{"location":"getting-started/hackathon-server/#using-the-siim-hackathon-server","text":"When making requests against the end points below, ensure you include an HTTP header like so: apikey: [your API key]","title":"Using the SIIM Hackathon Server"},{"location":"getting-started/hackathon-server/#fhir","text":"Endpoint: https://hackathon.siim.org/fhir/ Overview of FHIR objects/resources at: https://hackathon.siim.org/ Server powered by HAPI FHIR","title":"FHIR:"},{"location":"getting-started/hackathon-server/#dicomweb","text":"Endpoint: https://hackathon.siim.org/dicomweb/ WADO-URI endpoint: https://hackathon.siim.org/wadouri/ VNA Web UI at https://hackathon.siim.org/vna/ Server powered by Orthanc DICOM Server","title":"DICOMweb:"},{"location":"getting-started/hackathon-server/#ihe-sole","text":"Endpoint: https://hackathon.siim.org/sole/ Check out the Profile text and Github project for information on how to use the API and event submission samples.","title":"IHE SOLE:"},{"location":"getting-started/hackathon-server/#see-also","text":"Resources of Interest - other APIs, Libraries, etc. Datasets - Openly available datasets in medical imaging. Tip : If your prefer testing right from within your browser, you can use an extension like ModHeader to send your API key via HTTP headers.","title":"See also"},{"location":"getting-started/mod-header/","text":"ModHeader for in-browser exploration of Hackathon APIs All the APIs hosted on the Hackathon server require an API key to be sent via an HTTP header, which is easy to do using a tool like Postman or curl, but not very straightforward right from within the browser. You can obtain a plugin/extension to enable most modern browsers to do this. For example, ModHeader for Chrome can enable this for Chrome users. Configuration Said browser plugins allow you to send specific headers to specific sites. Using the example of ModHeader, you can configured it like so: * Request Headers apikey: [your-api-key] Replace [your-api-key] with your private API key. * Filters To ensure your API is not to any other Internet website, add the following entries: https://hackathon.siim.org/.* and http://hackathon.siim.org/.* You now should be able to navigate to URLs like https://hackathon.siim.org/ or https://hackathon.siim.org/vna and use them in your browser.","title":"ModHeader"},{"location":"getting-started/mod-header/#modheader-for-in-browser-exploration-of-hackathon-apis","text":"All the APIs hosted on the Hackathon server require an API key to be sent via an HTTP header, which is easy to do using a tool like Postman or curl, but not very straightforward right from within the browser. You can obtain a plugin/extension to enable most modern browsers to do this. For example, ModHeader for Chrome can enable this for Chrome users.","title":"ModHeader for in-browser exploration of Hackathon APIs"},{"location":"getting-started/mod-header/#configuration","text":"Said browser plugins allow you to send specific headers to specific sites. Using the example of ModHeader, you can configured it like so: * Request Headers apikey: [your-api-key] Replace [your-api-key] with your private API key. * Filters To ensure your API is not to any other Internet website, add the following entries: https://hackathon.siim.org/.* and http://hackathon.siim.org/.* You now should be able to navigate to URLs like https://hackathon.siim.org/ or https://hackathon.siim.org/vna and use them in your browser.","title":"Configuration"},{"location":"miscellaneous/data-sets/","text":"Openly available datasets SIIM Hackathon Dataset A small but comprehensive dataset featuring fictional, but realistic, patient personas with their clinical data in FHIR and images in DICOM that coraborate each patient's story. Note: If you are using the Hackathon Server then it already has this data loaded. The Cancer Imaging Archive (TCIA) TCIA is a service which de-identifies and hosts a large archive of medical images of cancer accessible for public download. The data are organized as \u201cCollections\u201d, typically patients related by a common disease (e.g. lung cancer), image modality (MRI, CT, etc) or research focus. DICOM is the primary file format used by TCIA for image storage. Supporting data related to the images such as patient outcomes, treatment details, genomics, pathology, and expert analyses are also provided when available. Imaging Data Commons (IDC) IDC connects researchers with publicly available cancer imaging data, often linked with other types of cancer data, and co-located with cloud-based computational resources and big data analysis tools provided by the Google Cloud Platform. IDC will provide the tools to search and visualize cancer imaging data, define cohorts and use those cohorts for cloud-based analysis to better understand the disease and evaluate treatment options. SIIM-ISIC Melanoma Classification Challenge This Dermatology dataset contains 33,126 dermoscopic training images of unique benign and malignant skin lesions from over 2,000 patients. Each image is associated with one of these individuals using a unique patient identifier. All malignant diagnoses have been confirmed via histopathology, and benign diagnoses have been confirmed using either expert agreement, longitudinal follow-up, or histopathology. A thorough publication describing all features of this dataset is available in the form of a pre-print that has not yet undergone peer review. The dataset was generated by the International Skin Imaging Collaboration (ISIC) and images are from the following sources: Hospital Cl\u00ednic de Barcelona, Medical University of Vienna, Memorial Sloan Kettering Cancer Center, Melanoma Institute Australia, University of Queensland, and the University of Athens Medical School. The dataset was curated for the SIIM-ISIC Melanoma Classification Challenge hosted on Kaggle during the Summer of 2020.","title":"Data Sets"},{"location":"miscellaneous/data-sets/#openly-available-datasets","text":"","title":"Openly available datasets"},{"location":"miscellaneous/data-sets/#siim-hackathon-dataset","text":"A small but comprehensive dataset featuring fictional, but realistic, patient personas with their clinical data in FHIR and images in DICOM that coraborate each patient's story. Note: If you are using the Hackathon Server then it already has this data loaded.","title":"SIIM Hackathon Dataset"},{"location":"miscellaneous/data-sets/#the-cancer-imaging-archive-tcia","text":"TCIA is a service which de-identifies and hosts a large archive of medical images of cancer accessible for public download. The data are organized as \u201cCollections\u201d, typically patients related by a common disease (e.g. lung cancer), image modality (MRI, CT, etc) or research focus. DICOM is the primary file format used by TCIA for image storage. Supporting data related to the images such as patient outcomes, treatment details, genomics, pathology, and expert analyses are also provided when available.","title":"The Cancer Imaging Archive (TCIA)"},{"location":"miscellaneous/data-sets/#imaging-data-commons-idc","text":"IDC connects researchers with publicly available cancer imaging data, often linked with other types of cancer data, and co-located with cloud-based computational resources and big data analysis tools provided by the Google Cloud Platform. IDC will provide the tools to search and visualize cancer imaging data, define cohorts and use those cohorts for cloud-based analysis to better understand the disease and evaluate treatment options.","title":"Imaging Data Commons (IDC)"},{"location":"miscellaneous/data-sets/#siim-isic-melanoma-classification-challenge","text":"This Dermatology dataset contains 33,126 dermoscopic training images of unique benign and malignant skin lesions from over 2,000 patients. Each image is associated with one of these individuals using a unique patient identifier. All malignant diagnoses have been confirmed via histopathology, and benign diagnoses have been confirmed using either expert agreement, longitudinal follow-up, or histopathology. A thorough publication describing all features of this dataset is available in the form of a pre-print that has not yet undergone peer review. The dataset was generated by the International Skin Imaging Collaboration (ISIC) and images are from the following sources: Hospital Cl\u00ednic de Barcelona, Medical University of Vienna, Memorial Sloan Kettering Cancer Center, Melanoma Institute Australia, University of Queensland, and the University of Athens Medical School. The dataset was curated for the SIIM-ISIC Melanoma Classification Challenge hosted on Kaggle during the Summer of 2020.","title":"SIIM-ISIC Melanoma Classification Challenge"},{"location":"whats-new/2021/","text":"What's new in 2021? AI Orchestrator Demonstrates how AI/ML models can find out about jobs of newly incoming studies, and subsequently claim them, by having a Workflow Orchestrator tracking available/claimed/completed jobs. It show cases IHE's newest AI profiles like AIW-I and AIR . The entry endpoint is https://hackathon.siim.org/ai-orchestrator/workitems If you want to find out more, visit the project's GitHub page . SonarQube A tool that can scan your project's code and provide recommendations for improving security, reliability, ...etc. Useful for bringing awareness of programming oversights, common to both experienced and new developers, which may end up leaving security and other types of vulnerabilities in the source code. (PS: You'll have access to your own space, no one else sees you code) The UI login is available at http://hackathon.siim.org:9000/ and we have detailed instructions on how to use it . More about SonarQube: Homepage or Wikipedia . Contact Mohannad Hussain (Email or Slack @Mohannad )","title":2021},{"location":"whats-new/2021/#whats-new-in-2021","text":"","title":"What's new in 2021?"},{"location":"whats-new/2021/#ai-orchestrator","text":"Demonstrates how AI/ML models can find out about jobs of newly incoming studies, and subsequently claim them, by having a Workflow Orchestrator tracking available/claimed/completed jobs. It show cases IHE's newest AI profiles like AIW-I and AIR . The entry endpoint is https://hackathon.siim.org/ai-orchestrator/workitems If you want to find out more, visit the project's GitHub page .","title":"AI Orchestrator"},{"location":"whats-new/2021/#sonarqube","text":"A tool that can scan your project's code and provide recommendations for improving security, reliability, ...etc. Useful for bringing awareness of programming oversights, common to both experienced and new developers, which may end up leaving security and other types of vulnerabilities in the source code. (PS: You'll have access to your own space, no one else sees you code) The UI login is available at http://hackathon.siim.org:9000/ and we have detailed instructions on how to use it . More about SonarQube: Homepage or Wikipedia . Contact Mohannad Hussain (Email or Slack @Mohannad )","title":"SonarQube"}]}